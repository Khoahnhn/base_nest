version: '3'
services:
  db:
    image: postgres:14.1
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
    ports:
      - ${TYPEORM_PORT}:5432
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
      - ./db_data:/var/lib/postgresql/data
  cache:
    image: redis:6.2
    ports:
      - ${REDIS_PORT}:6379
  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=redis:${REDIS_PORT}
    ports:
      - "8082:8081"
#  elasticsearch:
#    #    build:
#    #      context: elasticsearch/
#    #      args:
#    #        ELASTIC_VERSION: ${ELASTIC_VERSION}
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.2
#    volumes:
#      - ./elasticsearch.yml:/usr/share/elasticsearch.yml:ro,z
#    #      - elasticsearch:/usr/share/elasticsearch/data:z
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    environment:
#      ES_JAVA_OPTS: -Xms512m -Xmx512m
#      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
#      discovery.type: single-node
#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.4.2
#    restart: always
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200    # address of elasticsearch docker container which kibana will connect
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch                                   # kibana will start when elasticsearch has started

#  api:
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    image: madwolrd-market-api
#    ports:
#      - '3102:3000'
#    stdin_open: true
#    tty: true
#    depends_on:
#      - db
#      - cache
#    environment:
#      HOST: 0.0.0.0

volumes:
#  setup:
#  elasticsearch:
  db:
    driver: local
  cache:
    driver: local
networks:
  default:
    external:
      name: shared-network

